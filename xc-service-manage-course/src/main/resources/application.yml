server:
  port: 31200

spring:
  application:
    name: xc-service-manage-course
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/xc_course?characterEncoding=utf-8
      username: root
      password: abc123
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
  data:
    mongodb:
      uri:  mongodb://localhost:27017/xc_cms
      database: xc_cms

pagehelper:
  helper-dialect: mysql

eureka:
  client:
    registerWithEureka: true # 服务注册，是否将自己注册到Eureka服务中,高可用需要使用，相互注册
    fetchRegistry: true # 服务发现，是否从Eureka中获取注册信息
    serviceUrl: # Eureka 客户端与Eureka服务端的交互地址,多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://eureka02:50102/eureka/} # 高可用环境下需要使用域名,注册到其他服务器
  instance:
    prefer-ip-address: true # 将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} # 指定实例id

ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间

course-publish:
  siteId: 5cbc16d924ff441064d48a3d
  templateId: 5cbbdc3824ff441064d48a24
  previewUrl: http://www.xuecheng.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhysicalPath: /course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/